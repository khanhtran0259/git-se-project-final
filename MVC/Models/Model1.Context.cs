//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SE_DBEntities : DbContext
    {
        public SE_DBEntities()
            : base("name=SE_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DeliveryNote> DeliveryNotes { get; set; }
        public virtual DbSet<OrderProduct> OrderProducts { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Product> Products { get; set; }
    
        public virtual int add_item(string name, string price)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var priceParameter = price != null ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_item", nameParameter, priceParameter);
        }
    
        public virtual int add_Order(Nullable<System.DateTime> date, string paymentMethod)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var paymentMethodParameter = paymentMethod != null ?
                new ObjectParameter("paymentMethod", paymentMethod) :
                new ObjectParameter("paymentMethod", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_Order", dateParameter, paymentMethodParameter);
        }
    
        public virtual int add_OrderProduct(Nullable<int> orderId, Nullable<int> productId, Nullable<int> quantity)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_OrderProduct", orderIdParameter, productIdParameter, quantityParameter);
        }
    
        public virtual int add_ReceiveProduct(Nullable<int> noteId, Nullable<int> productId, Nullable<int> quantity)
        {
            var noteIdParameter = noteId.HasValue ?
                new ObjectParameter("noteId", noteId) :
                new ObjectParameter("noteId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_ReceiveProduct", noteIdParameter, productIdParameter, quantityParameter);
        }
    
        public virtual int edit_item(string id, string name, string price, Nullable<int> quantity)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var priceParameter = price != null ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("edit_item", idParameter, nameParameter, priceParameter, quantityParameter);
        }
    
        public virtual ObjectResult<fill_ImportedDataGridView_Result> fill_ImportedDataGridView(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<fill_ImportedDataGridView_Result>("fill_ImportedDataGridView", idParameter);
        }
    
        public virtual int new_receiptNote(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("new_receiptNote", dateParameter);
        }
    
        public virtual int remove_item(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("remove_item", idParameter);
        }
    
        public virtual int remove_OrderProduct(Nullable<int> orderId, Nullable<int> productId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("orderId", orderId) :
                new ObjectParameter("orderId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("remove_OrderProduct", orderIdParameter, productIdParameter);
        }
    
        public virtual int remove_ReceiveProduct(Nullable<int> noteId, Nullable<int> productId)
        {
            var noteIdParameter = noteId.HasValue ?
                new ObjectParameter("noteId", noteId) :
                new ObjectParameter("noteId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("remove_ReceiveProduct", noteIdParameter, productIdParameter);
        }
    
        public virtual int update_Order()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_Order");
        }
    
        public virtual int update_orderProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_orderProduct");
        }
    
        public virtual int update_receiveProduct()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("update_receiveProduct");
        }
    }
}
